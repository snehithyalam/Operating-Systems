#include<stdio.h>
int i,j;
void rr(int p[],int a[],int b[],int n,int q)
{
	int r[10];
	int c=0;
	int completed=0;
	int w[10]={0};
	int t[10]={0};
	for(i=0;i<n;i++)
	{
		r[i]=b[i];
	}
	while(completed <n)
	{
		for(i=0;i<n;i++)
		{
			if(a[i] <= c && r[i] >0)
			{
				if(r[i] >= q)
				{
					r[i]=r[i]-q;
					c=c+q;
				}
				else{
					c=c+r[i];
					r[i]=0;
				}
				if(r[i]==0 && w[i]==0)
				{
					completed++;
					t[i]=c-a[i];
					w[i]=t[i]-b[i];
				}
			}
		}
	}
	printf("arr\tburst\twait\ttat\n");
	for(i=0;i<n;i++)
	{
		printf("%d\t\t%d\t\t%d\t\t%d\n",a[i],b[i],w[i],t[i]);
	}
}
int main()
{
	int n;
	int p[10],a[10],b[10],q;
	printf("enter no of process:");
	scanf("%d",&n);
	for(i=0;i<n;i++)
	{
		printf("enter arr and burst for process %d:",i+1);
		scanf("%d%d",&a[i],&b[i]);
		p[i]=i+1;
	}
	printf("enter quantum:");
	scanf("%d",&q);
	rr(p,a,b,n,q);
}
